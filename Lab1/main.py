# main.py

# Размеры поля (ширина и высота 100x100)
FIELD_WIDTH = 100
FIELD_HEIGHT = 100

def parse_command(command):
    """
    Разбирает строку команды, введённую пользователем.
    Формат: 'направление,шаги' — например, 'R,4'
    Возвращает кортеж (направление, количество шагов)
    """
    try:
        # Удаляем лишние пробелы и разбиваем по запятой
        direction, steps = command.strip().split(',')
        steps = int(steps)           # Преобразуем количество шагов в целое число
        direction = direction.upper()  # Приводим направление к верхнему регистру (например, 'r' -> 'R')

        # Проверка допустимости направления
        if direction not in ('L', 'R', 'U', 'D'):
            raise ValueError("Неверное направление.")

        return direction, steps
    except:
        # Если формат команды неправильный — сообщаем об ошибке и завершаем программу
        print("Ошибка: команда должна быть в формате 'направление,шаги' (например, R,4)")
        exit(1)

def move_robot_by_commands():
    """
    Основная логика движения робота.
    Принимает команды от пользователя и пошагово перемещает робота,
    выводя каждую координату и проверяя границы поля.
    """
    x, y = 1, 1  # Начальные координаты робота
    print(f"Стартовая позиция: {x},{y}")

    while True:
        # Получаем команду от пользователя
        command = input("Введите команду (например, R,4) или 'stop' для завершения: ")
        if command.lower() == 'stop':
            # Если пользователь ввёл 'stop', выходим из цикла
            print("Завершение программы.")
            break

        # Разбираем команду
        direction, steps = parse_command(command)

        # Выполняем шаги один за другим
        for _ in range(steps):
            # Сохраняем предыдущие координаты (на случай отладки или отката)
            prev_x, prev_y = x, y

            # Определяем, в каком направлении двигаться
            if direction == 'L':
                x -= 1
            elif direction == 'R':
                x += 1
            elif direction == 'U':
                y -= 1
            elif direction == 'D':
                y += 1

            # Проверяем, не вышел ли робот за границы поля
            if not (1 <= x <= FIELD_WIDTH and 1 <= y <= FIELD_HEIGHT):
                print(f"Ошибка: выход за границы поля в позиции ({x},{y}).")
                return  # Завершаем выполнение при ошибке

            # Выводим текущую позицию робота после каждого шага
            print(f"{x},{y}")

def main():
    """
    Точка входа в программу.
    Запускает перемещение робота по командам пользователя.
    """
    move_robot_by_commands()

# Запуск программы
if __name__ == "__main__":
    main()
